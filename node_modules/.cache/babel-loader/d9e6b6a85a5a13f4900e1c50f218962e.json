{"remainingRequest":"/home/l/CodeProjects/reset-gas/node_modules/thread-loader/dist/cjs.js!/home/l/CodeProjects/reset-gas/node_modules/babel-loader/lib/index.js!/home/l/CodeProjects/reset-gas/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/l/CodeProjects/reset-gas/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/l/CodeProjects/reset-gas/src/components/CrowdFund.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/l/CodeProjects/reset-gas/src/components/CrowdFund.vue","mtime":1622528200470},{"path":"/home/l/CodeProjects/reset-gas/node_modules/cache-loader/dist/cjs.js","mtime":1614824569995},{"path":"/home/l/CodeProjects/reset-gas/node_modules/thread-loader/dist/cjs.js","mtime":1614824569999},{"path":"/home/l/CodeProjects/reset-gas/node_modules/babel-loader/lib/index.js","mtime":1614824570003},{"path":"/home/l/CodeProjects/reset-gas/node_modules/cache-loader/dist/cjs.js","mtime":1614824569995},{"path":"/home/l/CodeProjects/reset-gas/node_modules/vue-loader/lib/index.js","mtime":1614824574443}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CrowdFund.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"content\">\n  <div class=\"mnemonic\">\n    <span>助记词：</span>\n    <textarea class=\"mnemonic\" type=\"textarea\" id=\"mnemonic\" v-model=\"mnemonic\" >\n    </textarea>\n  </div>\n  <div>\n    <select class=\"select\" v-model=\"selected\" name=\"fruit\" @change=\"selectFn($event)\">\n      <option value=\"\">选择网络</option>\n      <option v-for=\"item in networks\" :key=\"item.networkId\" :value=\"item.id\">{{item.name}}</option>\n    </select>\n  </div>\n  <div>\n    <h4>address： {{account}}</h4>\n    <h4>NONCE： {{nonce}}</h4>\n    <h4>Balance: {{balance}} ether</h4>\n  </div>\n  <div>\n    <div>Nonce    : <input id=\"nonce\" v-model=\"nonce\" ></div>\n    <div>Gas Price: <input id=\"gasPrice\" v-model=\"gasPrice\" placeholder='GWEI'></div>\n    <div>Gas Limit: <input id=\"gas\" v-model=\"gasLimit\" placeholder='gas limit'></div>\n    <div>Pay      : <input id=\"pay\" v-model=\"payETH\" placeholder='(ether)'></div>\n    <div>To       : <input id=\"to\" v-model=\"to\" placeholder='address'></div>\n    <div>Data     : <input id=\"data\" v-model=\"sendData\" placeholder='0x00'></div>\n  </div>\n  <div><button :disabled=\"dis\" @click=\"signedTransaction\">signedTransaction</button></div>\n  <div>SignData: <input id=\"data\" v-model=\"signData\"></div>\n  <div><button :disabled=\"dis\" @click=\"sendSignedTransaction\">sendSignedTransaction</button></div>\n  <!-- <div><button @click=\"enableEthereum\">Enable Ethereum</button></div> -->\n</div>\n</template>\n\n<script>\nconst Web3 = require('web3')\nconst bip39 = require('bip39')\nconst Tx = require('ethereumjs-tx').Transaction;\nconst Common=require('ethereumjs-common').default\nconst {hdkey} = require('ethereumjs-wallet')\nconst util = require('ethereumjs-util')\n// const web3js = window.web3\n// let mnemonic = \"depart expose  labor robust  raven shaft toss curious nephew just end stairs\"\n\n// let web3 = new Web3(new Web3.providers.HttpProvider('https://ropsten.infura.io/v3/d3d7efacf489482785f091bbf019f2a9'));\n\n// let web3 = new Web3(web3js.currentProvider);\nexport default {\n  name: 'CrowdFund',\n  data() {\n    return {\n      mnemonic: 'script desert mix cabbage drastic inner paper dinner replace innocent material cheap',\n      networks: [\n        {id: 0, name:'Main Net',networkId:'1',chainId:'1', label: 'mainnet'},\n        {id: 1, name:'Ropsten test network',networkId:'3',chainId:'3',label: 'ropsten'},\n        {id: 2, name:'Rinkeby test network',networkId:'4',chainId:'4',label: 'rinkeby'},\n        {id: 3, name:'Goerli test network',networkId:'5',chainId:'5',label: 'goerli'},\n        {id: 4, name:'Kovan test network',networkId:'42',chainId:'42',label: 'kovan'},\n        ],\n      myWeb3: null,\n      chainId: null,\n      chainLabel: null,\n      selected: '',\n      dis: true,\n      account: null,\n      balance: null,\n      nonce: null,\n      gasPrice: null,\n      gasLimit: null,\n      payETH: null,\n      to: null,\n      sendData: null,\n      signData: null\n    }\n  },\n\n\n  methods: {\n    enableEthereum(){\n      console.log('click button');\n      window.ethereum.request({ method: 'eth_requestAccounts' });\n      this.getAccount();\n    },\n    async selectFn(e) {\n      let index = e.target.value\n      if(index === \"\"){\n        console.log(\"未选择网络\")\n      }else{\n        let item = this.networks[index]\n        this.chainLabel = item.label\n        this.chainId = Number(item.chainId)\n        console.log(item.label)\n        let rpc = 'https://'+this.chainLabel+'.infura.io/v3/d3d7efacf489482785f091bbf019f2a9'\n        console.log(rpc)\n        this.myWeb3 = new Web3(new Web3.providers.HttpProvider(rpc));\n        let web3 = this.myWeb3\n        // const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        if(this.mnemonic === null){\n          console.log(\"请填入助记词！\")\n          return\n        }\n        let seed = await bip39.mnemonicToSeed(this.mnemonic)\n        console.log(this.mnemonic)\n        let hdWallet = await hdkey.fromMasterSeed(seed)\n        let key1 = await hdWallet.derivePath(\"m/44'/60'/0'/0/0\")\n\n        let address = await util.pubToAddress(key1._hdkey._publicKey, true)\n        this.account = '0x'+address.toString('hex');\n        web3.eth.getTransactionCount(this.account).then(count=>{\n          this.nonce = count\n          console.log(count)\n          })\n        web3.eth.getBalance(this.account).then(balance=>{\n          this.balance = (balance/1e18).toFixed(4)\n          console.log(balance)\n          this.dis = false\n          })\n      }\n\n\n    },\n    async signedTransaction(){\n      let web3 = this.myWeb3\n      const customCommon = await Common.forCustomChain(\n        this.chainLabel,\n        {\n          name: this.chainLabel,\n          networkId: this.chainId,\n          chainId: this.chainId,\n        },\n        'petersburg',\n      )\n\n      console.log(customCommon)\n\n      let seed = await bip39.mnemonicToSeed(this.mnemonic)\n      \n      let hdWallet = await hdkey.fromMasterSeed(seed)\n      let key1 = await hdWallet.derivePath(\"m/44'/60'/0'/0/0\")\n      let privateKey1 = util.bufferToHex(key1._hdkey._privateKey)\n\n      const privateKey = Buffer.from(\n        privateKey1.slice(2),\n        'hex',\n      )\n\n      console.log('account:', this.account);\n      console.log('nonce:', this.nonce);\n      console.log('to:', this.to);\n      const payETH = web3.utils.toHex(this.payETH*1e18);\n      console.log('value:', payETH);\n      const gasPrice = web3.utils.toHex(this.gasPrice*1e9);\n      console.log('gasPrice:', gasPrice);\n      const gasLimit = web3.utils.toHex(this.gasLimit);\n      console.log('gas:', gasLimit);\n      console.log('data:', this.sendData);\n\n      web3.eth.getTransactionCount(this.account).then(count=>{\n        console.log(count)\n          var rawTx = {\n                nonce: Number(this.nonce),\n                from: this.account,\n                to: this.to,\n                value: payETH,\n                gasPrice: gasPrice,\n                gas: gasLimit,\n                data: this.sendData\n            };\n\n          var tx=new Tx(rawTx,{common:customCommon})\n          tx.sign(privateKey)\n          this.serializedTx = tx.serialize();\n          this.signData = '0x' + this.serializedTx.toString('hex')\n          console.log('hash：' + web3.utils.sha3(this.serializedTx))\n          console.log('sign： ' + '0x' + this.serializedTx.toString('hex'))\n      })\n    },\n\n    async sendSignedTransaction() {\n      let web3 = this.myWeb3\n      const fromHexString = hexString => new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n      const serializedTx = fromHexString(this.signData.slice(2))\n      console.log('hash：' + web3.utils.sha3(serializedTx))\n\n      web3.eth.sendSignedTransaction(this.signData)\n      .on('transactionHash', console.log)\n      .on('receipt', console.log)\n      .on('error', console.error);\n    },\n  }\n}\n</script>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ndiv {\n  margin: 16px 8px 0;\n  width: 360px;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\ninput{\n  height: 24px;\n  width: 360px;\n}\n.select{\n  margin-top: 20px;\n  height: 40px;\n}\n.mnemonic{\n  height: 100px;\n  width: 360px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}