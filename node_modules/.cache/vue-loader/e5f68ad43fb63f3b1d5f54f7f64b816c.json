{"remainingRequest":"/home/l/CodeProjects/reset-gas/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/l/CodeProjects/reset-gas/src/components/CrowdFund.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/l/CodeProjects/reset-gas/src/components/CrowdFund.vue","mtime":1633772437896},{"path":"/home/l/CodeProjects/reset-gas/node_modules/cache-loader/dist/cjs.js","mtime":1614824569995},{"path":"/home/l/CodeProjects/reset-gas/node_modules/babel-loader/lib/index.js","mtime":1614824570003},{"path":"/home/l/CodeProjects/reset-gas/node_modules/cache-loader/dist/cjs.js","mtime":1614824569995},{"path":"/home/l/CodeProjects/reset-gas/node_modules/vue-loader/lib/index.js","mtime":1614824574443}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CrowdFund.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CrowdFund.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"content\">\n  <div >\n  <div class=\"mnemonic\">\n    <span>助记词：</span>\n    <textarea  class=\"mnemoniccontent\" type=\"textarea\" id=\"mnemonic\" v-model=\"mnemonic\" >\n    </textarea>\n  </div>\n\n  <div class=\"mnemonic\">\n    <span>私钥：</span>\n    <textarea class=\"mnemoniccontent\" type=\"textarea\" id=\"privateKey\" placeholder=\"291c09fc38eb9a253ee9e2d8e90c91b4f08cd87aa3d9bf707d5fd54a3b4aa442\" v-model=\"privateKey\" >\n    </textarea>\n  </div>\n</div>\n  <div>\n    <select class=\"select\" v-model=\"selected\" name=\"fruit\" @change=\"selectFn($event)\">\n      <option value=\"\">选择网络</option>\n      <option v-for=\"item in networks\" :key=\"item.networkId\" :value=\"item.id\">{{item.name}}</option>\n    </select>\n  </div>\n  <div>\n    <h4>address： {{account}}</h4>\n    <h4>NONCE： {{nonce}}</h4>\n    <h4>Balance: {{balance}} ether</h4>\n  </div>\n  <div>\n    <div>Nonce    : <input id=\"nonce\" v-model=\"nonce\" ></div>\n    <div>Gas Price: <input id=\"gasPrice\" v-model=\"gasPrice\" placeholder='GWEI'></div>\n    <div>Gas Limit: <input id=\"gas\" v-model=\"gasLimit\" placeholder='gas limit'></div>\n    <div>Pay      : <input id=\"pay\" v-model=\"payETH\" placeholder='(ether)'></div>\n    <div>To       : <input id=\"to\" v-model=\"to\" placeholder='address'></div>\n    <div>Data     : <input id=\"data\" v-model=\"sendData\" placeholder='0x00'></div>\n  </div>\n  <div><button :disabled=\"dis\" @click=\"signedTransaction\">signedTransaction</button></div>\n  <div>SignData: <input id=\"data\" v-model=\"signData\"></div>\n  <div><button :disabled=\"dis\" @click=\"sendSignedTransaction\">sendSignedTransaction</button></div>\n  <!-- <div><button @click=\"enableEthereum\">Enable Ethereum</button></div> -->\n</div>\n</template>\n\n<script>\nconst Web3 = require('web3')\nconst bip39 = require('bip39')\nconst Tx = require('ethereumjs-tx').Transaction;\nconst Common=require('ethereumjs-common').default\nconst {hdkey} = require('ethereumjs-wallet')\nconst util = require('ethereumjs-util')\n// const web3js = window.web3\n// let mnemonic = \"depart expose  labor robust  raven shaft toss curious nephew just end stairs\"\n\n// let web3 = new Web3(new Web3.providers.HttpProvider('https://ropsten.infura.io/v3/d3d7efacf489482785f091bbf019f2a9'));\n\n// let web3 = new Web3(web3js.currentProvider);\nexport default {\n  name: 'CrowdFund',\n  data() {\n    return {\n      mnemonic: 'script desert mix cabbage drastic inner paper dinner replace innocent material cheap',\n      privateKey: '',\n      networks: [\n        {id: 0, name:'Main Net',networkId:'1',chainId:'1', label: 'mainnet'},\n        {id: 1, name:'Ropsten test network',networkId:'3',chainId:'3',label: 'ropsten'},\n        {id: 2, name:'Rinkeby test network',networkId:'4',chainId:'4',label: 'rinkeby'},\n        {id: 3, name:'Goerli test network',networkId:'5',chainId:'5',label: 'goerli'},\n        {id: 4, name:'Kovan test network',networkId:'42',chainId:'42',label: 'kovan'},\n        ],\n      myWeb3: null,\n      chainId: null,\n      chainLabel: null,\n      selected: '',\n      dis: true,\n      account: null,\n      balance: null,\n      nonce: null,\n      gasPrice: null,\n      gasLimit: null,\n      payETH: null,\n      to: null,\n      sendData: null,\n      signData: null\n    }\n  },\n\n\n  methods: {\n    enableEthereum(){\n      console.log('click button');\n      window.ethereum.request({ method: 'eth_requestAccounts' });\n      this.getAccount();\n    },\n    async selectFn(e) {\n      let index = e.target.value\n      if(index === \"\"){\n        console.log(\"未选择网络\")\n      }else{\n        let item = this.networks[index]\n        this.chainLabel = item.label\n        this.chainId = Number(item.chainId)\n        console.log(item.label)\n        let rpc = 'https://'+this.chainLabel+'.infura.io/v3/d3d7efacf489482785f091bbf019f2a9'\n        console.log(rpc)\n        this.myWeb3 = new Web3(new Web3.providers.HttpProvider(rpc));\n        let web3 = this.myWeb3\n        // const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        if(this.mnemonic === null){\n          console.log(\"请填入助记词！\")\n          return\n        }\n        console.log(this.privateKey)\n        if(this.mnemonic === 'script desert mix cabbage drastic inner paper dinner replace innocent material cheap' && this.privateKey === \"\"){\n          console.log(\"请填入私钥！\")\n        }\n        let address =\"\"\n        if(this.privateKey !== \"\" && this.privateKey.length == 64){\n          let publicKey = util.privateToPublic(new Buffer(this.privateKey, 'hex'));\n          address =\"0x\"+ util.publicToAddress(publicKey).toString('hex');\n          console.log(address)\n        }else{\n          let seed = await bip39.mnemonicToSeed(this.mnemonic)\n          console.log(this.mnemonic)\n          let hdWallet = await hdkey.fromMasterSeed(seed)\n          let key1 = await hdWallet.derivePath(\"m/44'/60'/0'/0/0\")\n\n          let addr = await util.pubToAddress(key1._hdkey._publicKey, true)\n          address = '0x'+addr.toString('hex');\n\n        }\n          this.account = address;\n          web3.eth.getTransactionCount(this.account).then(count=>{\n            this.nonce = count\n            console.log(count)\n            })\n          web3.eth.getBalance(this.account).then(balance=>{\n            this.balance = (balance/1e18).toFixed(4)\n            console.log(balance)\n            this.dis = false\n            })\n\n      }\n\n\n    },\n    async signedTransaction(){\n      let web3 = this.myWeb3\n      const customCommon = await Common.forCustomChain(\n        this.chainLabel,\n        {\n          name: this.chainLabel,\n          networkId: this.chainId,\n          chainId: this.chainId,\n        },\n        'petersburg',\n      )\n\n      console.log(customCommon)\n\n      let seed = await bip39.mnemonicToSeed(this.mnemonic)\n      \n      let hdWallet = await hdkey.fromMasterSeed(seed)\n      let key1 = await hdWallet.derivePath(\"m/44'/60'/0'/0/0\")\n      let privateKey1 = util.bufferToHex(key1._hdkey._privateKey)\n      if(this.privateKey !== \"\" && this.privateKey.length == 64){\n        privateKey1 = \"0x\" + this.privateKey;\n      }\n      const privateKey = Buffer.from(\n        privateKey1.slice(2),\n        'hex',\n      )\n\n      console.log('account:', this.account);\n      console.log('nonce:', this.nonce);\n      console.log('to:', this.to);\n      const payETH = web3.utils.toHex(this.payETH*1e18);\n      console.log('value:', payETH);\n      const gasPrice = web3.utils.toHex(this.gasPrice*1e9);\n      console.log('gasPrice:', gasPrice);\n      const gasLimit = web3.utils.toHex(this.gasLimit);\n      console.log('gas:', gasLimit);\n      console.log('data:', this.sendData);\n\n      web3.eth.getTransactionCount(this.account).then(count=>{\n        console.log(count)\n          var rawTx = {\n                nonce: Number(this.nonce),\n                from: this.account,\n                to: this.to,\n                value: payETH,\n                gasPrice: gasPrice,\n                gas: gasLimit,\n                data: this.sendData\n            };\n\n          var tx=new Tx(rawTx,{common:customCommon})\n          tx.sign(privateKey)\n          this.serializedTx = tx.serialize();\n          this.signData = '0x' + this.serializedTx.toString('hex')\n          console.log('hash：' + web3.utils.sha3(this.serializedTx))\n          console.log('sign： ' + '0x' + this.serializedTx.toString('hex'))\n      })\n    },\n\n    async sendSignedTransaction() {\n      let web3 = this.myWeb3\n      const fromHexString = hexString => new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n      const serializedTx = fromHexString(this.signData.slice(2))\n      console.log('hash：' + web3.utils.sha3(serializedTx))\n\n      web3.eth.sendSignedTransaction(this.signData)\n      .on('transactionHash', console.log)\n      .on('receipt', console.log)\n      .on('error', console.error);\n    },\n  }\n}\n</script>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ndiv {\n  margin: 16px 8px 0;\n  width: 360px;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\ninput{\n  height: 24px;\n  width: 360px;\n}\n.select{\n  margin-top: 20px;\n  height: 40px;\n}\n\n.mnemonic{\n  height: 66px;\n  width: 360px;\n}\n.mnemoniccontent{\n    height: 50px;\n  width: 360px;\n}\n</style>"]}]}